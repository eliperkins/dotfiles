#compdef carthage
#
# Zsh completion script for Carthage.

__subcommands() {
    local -a commands
    commands=(
        'archive'
        'bootstrap'
        'build'
        'checkout'
        'copy-frameworks'
        'fetch'
        'help'
        'update'
        'version'
    )
    _values Commands $commands
}

_carthage() {
    typeset -A opt_args
    local ret=1 state

    _arguments -C \
        '1: :__subcommands' \
        '*:: :->args' \
        && ret=0

    case $state in
        (args)
            case $words[1] in
                (archive)
                    _arguments \
                        '--output: :_files' \
                        '--color: :(auto always never)' \
                        '(-)*:: :->null_state' \
                        && ret=0
                        ;;
                (bootstrap|update)
                    _arguments \
                        '--configuration: :(Release Debug)' \
                        '--platform: :(all iOS Mac watchOS tvOS)' \
                        '--use-ssh' \
                        '--use-submodules' \
                        '--no-use-binaries' \
                        '--no-checkout' \
                        '--no-build' \
                        '--color: :(auto always never)' \
                        '--verbose' \
                        '(-)*:: :->null_state' \
                        && ret=0
                        ;;
                (build)
                    _arguments \
                        '--configuration: :(Release Debug)' \
                        '--platform: :(all iOS Mac watchOS tvOS)' \
                        '--no-skip-current' \
                        '--color: :(auto always never)' \
                        '--verbose' \
                        '(-)*:: :->null_state' \
                        && ret=0
                        ;;
                (checkout)
                    _arguments \
                        '--use-ssh' \
                        '--use-submodules' \
                        '--no-use-binaries' \
                        '--color: :(auto always never)' \
                        '(-)*:: :->null_state' \
                        && ret=0
                        ;;
                (fetch)
                    _arguments \
                        '--color: :(auto always never)' \
                        '(-)*:: :->null_state' \
                        && ret=0
                        ;;
                (help)
                    if (( $CURRENT == 2 ))
                    then
                        __subcommands && ret=0
                    fi
                    ;;
            esac
            ;;
    esac

    return ret
}
